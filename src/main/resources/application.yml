server:
  port: 8702      
spring:  application:    name: allen-gateway
  cloud:    gateway:
      discovery:        locator:
          # 是否与服务注册发现组件进行结合，通过 serviceId 转发到具体的服务实例。
          # 默认为 false，设为 true 便开启通过服务中心的自动根据 serviceId 创建路由的功能          enabled: false      routes:      - id: message_route
        uri: http://localhost:8083
#        uri: lb://allen-message-forwarding-server
#        filters:#        - name: RequestRateLimiter
#          args:
             # 基于Stripe的redis实现方案，使用的是令牌桶算法
             # 每秒允许通过的请求数，其实就是令牌桶的填充速率#            redis-rate-limiter.replenishRate: 10
             # 一秒内最大的请求数，其实就是令牌桶的最大容量，如果设置为0，则会阻塞所有请求
#            redis-rate-limiter.burstCapacity: 20
        predicates:
        - Method=POST
        - Path=/mf/**
        
  redis:
    host: localhost
    port: 6379
    database: 0

eureka:
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
    hostname: ${spring.cloud.client.ip-address}
    # true：实例以 IP 的形式注册；false：实例以机器 HOSTNAME 形式注册
    prefer-ip-address: true
    # 表示 Eureka Server 在接收到上一个心跳之后等待下一个心跳的秒数（默认 90 秒），
    # 若不能在指定时间内收到心跳，则移除此实例，并禁止此实例的流量。
    # 需要设置为至少高于 lease-renewal-interval-in-seconds 的值，不然会被误移除了。
    lease-expiration-duration-in-seconds: 30
    # 表示 Eureka Client 向 Eureka Server 发送心跳的频率（默认 30 秒），
    # 如果在 lease-expiration-duration-in-seconds 指定的时间内未收到心跳，则移除该实例。
    lease-renewal-interval-in-seconds: 10
  client:
    # Eureka Client 刷新本地缓存时间，默认30秒
    registry-fetch-interval-seconds: 5
    # 表示是否将自己注册到Eureka Server，默认为true。
    register-with-eureka: true 
    # 表示是否从Eureka Server获取注册信息，默认为true。
    fetch-registry: true
    # 表示客户端需要注册的 Eureka Server 的地址。
    service-url:
      defaultZone: http://allen:allen1234@localhost:8701/eureka/
